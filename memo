GETでデータを送る
更新はPush
送信はPOST

socket = new WebSocket("ws://" + window.location.host + "/websocket/test/");
socket.onmessage = function(e) {
    alert(e.data);
}
socket.onopen = function() {
    socket.send(JSON.stringify({'function':'test', 'argument': {}}));
}
// Call onopen directly if socket is already open
if (socket.readyState == WebSocket.OPEN) socket.onopen();

def json_serial(obj):
    if isinstance(obj, datetime):
        return obj.isoformat()
    raise TypeError ("Type %s not serializable" % type(obj))

class postget(LoginRequiredMixin, generic.TemplateView):
    def post(self, request, **kwargs):
        r = json.loads(request.body)['range']
        alredyhadID = json.loads(request.body)['alredyhadID']
        data = {'Theme_board':[], 'Post':[]}
        data['Theme_board'].extend(\
            list(Theme_board.objects.filter(\
                x__gte=r['TopLeft']['x'], y__gte=r['TopLeft']['y'],\
                x__lte=r['BottomRight']['x'], y__lte=r['BottomRight']['y'],\
            ).exclude(\
                id__in=alredyhadID['Theme_board']\
            ).values())\
        )
        data['Post'].extend(\
            list(Post.objects.filter(\
                x__gte=r['TopLeft']['x'], y__gte=r['TopLeft']['y'],\
                x__lte=r['BottomRight']['x'], y__lte=r['BottomRight']['y'],\
            ).exclude(\
                id__in=alredyhadID['Post']\
            ).values())\
        )#今から三分前ののみ表示例外もある
        return HttpResponse(json.dumps(data, default=json_serial))

class post(LoginRequiredMixin, generic.TemplateView):
    def post(self, request, **kwargs):
        body = json.loads(request.body)
        Post.objects.create(\
        user = request.user,\
        Theme_board = Theme_board.objects.get(pk=body['Theme_board']),\
        contents = body['contents'],\
        x = float(body['x']), y = float(body['y']))
        return HttpResponse(json.dumps({}))